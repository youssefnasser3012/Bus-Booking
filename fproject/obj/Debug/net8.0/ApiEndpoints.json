[
  {
    "ContainingType": "fproject.Controllers.CRUDuser",
    "Method": "Register",
    "RelativePath": "api",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForRegisterDto",
        "Type": "fproject.Dtos.SignupDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.AppointmentController",
    "Method": "GetAppointments",
    "RelativePath": "api/Appointment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.AppointmentController",
    "Method": "InsertAppointment",
    "RelativePath": "api/Appointment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appointmentfromdto",
        "Type": "fproject.Dtos.AppointmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.AppointmentController",
    "Method": "PutAppointment",
    "RelativePath": "api/Appointment",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appointment",
        "Type": "fproject.Dtos.AppointmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.AppointmentController",
    "Method": "GetAppointment",
    "RelativePath": "api/Appointment/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.AppointmentController",
    "Method": "DeleteAppointment",
    "RelativePath": "api/Appointment/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.AuthorizationController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForLoginDto",
        "Type": "fproject.Dtos.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.AuthorizationController",
    "Method": "Register",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForRegisterDto",
        "Type": "fproject.Dtos.SignupDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.CRUDuser",
    "Method": "updateUser",
    "RelativePath": "api/crudU",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "fproject.Dtos.userDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.CRUDuser",
    "Method": "deleteUser",
    "RelativePath": "api/crudU",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "fproject.Dtos.userDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.CRUDuser",
    "Method": "GetUsers",
    "RelativePath": "api/crudU",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[fproject.Models.User, fproject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "fproject.Controllers.CRUDuser",
    "Method": "GetUser",
    "RelativePath": "api/crudU/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "fproject.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "fproject.Controllers.CRUDuser",
    "Method": "Register",
    "RelativePath": "api/crudU/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForRegisterDto",
        "Type": "fproject.Dtos.SignupDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.DestinationController",
    "Method": "GetDestinations",
    "RelativePath": "api/Destination",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.DestinationController",
    "Method": "InsertDestination",
    "RelativePath": "api/Destination",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "destinationfromdto",
        "Type": "fproject.Dtos.DestinationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.DestinationController",
    "Method": "PutDestination",
    "RelativePath": "api/Destination",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "destination",
        "Type": "fproject.Dtos.DestinationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.DestinationController",
    "Method": "GetDestination",
    "RelativePath": "api/Destination/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.DestinationController",
    "Method": "DeleteDestination",
    "RelativePath": "api/Destination/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.DestinationController",
    "Method": "GetDestination2",
    "RelativePath": "api/Destination/join",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.TravellerRequestController",
    "Method": "GetRequests",
    "RelativePath": "api/TravellerRequest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.TravellerRequestController",
    "Method": "CreateRequest",
    "RelativePath": "api/TravellerRequest",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestfromdto",
        "Type": "fproject.Dtos.TravelerRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.TravellerRequestController",
    "Method": "GetRequest",
    "RelativePath": "api/TravellerRequest/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.TravellerRequestController",
    "Method": "DeleteRequest",
    "RelativePath": "api/TravellerRequest/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.TravellerRequestController",
    "Method": "AcceptRequest",
    "RelativePath": "api/TravellerRequest/Accept",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "fproject.Dtos.AcceptDeclineDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.TravellerRequestController",
    "Method": "DeclineRequest",
    "RelativePath": "api/TravellerRequest/Decline",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "fproject.Dtos.AcceptDeclineDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "fproject.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[fproject.WeatherForecast, fproject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]